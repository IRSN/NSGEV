% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PLODE.R
\name{quantMaxPLODE}
\alias{quantMaxPLODE}
\title{Profile Likelihood Confidence Intervals for the Quantiles
    of the Maximum on a given Period}
\usage{
quantMaxPLODE(
  object,
  date,
  probIni = 0.7,
  level = 0.95,
  out = c("data.frame", "array"),
  trace = 1
)
}
\arguments{
\item{object}{An object with class \code{"TVGEV"}.}

\item{date}{A vector that can be coerced to the class
\code{"Date"} giving the beginnings of the years in the period.}

\item{probIni}{The probability that will be used for the
initialisation of the tangential ODE.}

\item{level}{The confidence level \eqn{1 - \alpha}{1 - alpha}.}

\item{out}{The type of output wanted. The choice \code{"array"}
leads to an array with its dimensions corresponding to the
probability \eqn{p}, the type of result (lower/upper bound,
quantile) and the confidence level. With the choice
\code{"data.frame"} we get an object inheriting from this
class, actually a \code{quantMax.TVGEV} object for which some
methods like \code{autoplot} are available.}

\item{trace}{Integer level of verbosity.}
}
\value{
An object with class \code{"quantMax.TVGEV"} inheriting
    from \code{"data.frame"}
}
\description{
Compute the lower and upper limits of a confidence interval on the
quantiles \eqn{q_{M^\star}(p)}{q_M(p)} of the maximum
\eqn{M^\star}{M} on a given period of time. This computation is
made for a number of probabilities \eqn{p}.
}
\details{
For a given probability \eqn{p}, the profile likelihood confidence
interval for the quantile
\eqn{\eta(\boldsymbol{\psi},\,p):=q_{M^\star}(p;\,\boldsymbol{\psi})}{eta(psi,
p) := qM(p, psi)} can be obtained by minimising and maximising
\eqn{\eta(\boldsymbol{\psi},\,p)}{eta(psi, p)}
w.r.t. \eqn{\boldsymbol{\psi}}{psi} under the constraint
\eqn{\ell(\boldsymbol{\psi}) \geq \ell_{\max} - \delta}{ell(psi)
>= ell_max - delta} where \eqn{\ell(\boldsymbol{\psi})}{ell(psi)}
is the log-likelihood function, and \eqn{\delta := q_{\chi^2(1)}(1
-\alpha) /2}{ qchisq(1 - alpha, df = 1) /2}.  By differentiating
the Lagrangian for this problem w.r.t. the probability
\eqn{p}, we get an ODE for the vector
\eqn{\boldsymbol{\psi}(p)}{psi(p)}. This ODE may be called a
\emph{tangential} ODE inasmuch as it describes the evolution of the
vector \eqn{\boldsymbol{\psi}(p)}{psi(p)} on the likelihood
surface defined in the parameter space by the equation
\eqn{\ell(\boldsymbol{\psi}) = \ell_{\max} - \delta}{ell(psi) =
ell_max - delta}.  The initial ODE can be found either by solving
a constrained optimisation problem or by solving another ODE, the
\emph{radial} ODE that describes the evolution of a point moving from
an origin at the ML estimate \eqn{\hat{\boldsymbol{\psi}}}{psiHat}
to a destination located on the surface likelihood.
}
\section{Caution}{
 This function is experimental.
}

\examples{
\dontrun{
   library(deSolve)
   df <- within(TXMax_Dijon, Date <- as.Date(sprintf("\%4d-01-01", Year)))
   ## fit a TVGEV model. Only the location parameter is TV.
   object <- TVGEV(data = df, response = "TXMax", date = "Date",
                   design = breaksX(date = Date, breaks = "1970-01-01", degree = 1),
                   estim = "nloptr",
                   loc = ~ t1 + t1_1970)
   newDate <- as.Date(paste0(2025:2034, "-01-01"))
   st1 <- system.time(
      plODE <- quantMaxPLODE(object, date = newDate, level = c(0.70, 0.95))
   )
   st2 <- system.time(
       pl <- quantMax(object, date = newDate, conf = "proflik", trace = 1,
                  level = c(0.70, 0.95))
   )
   g <- autoplot(pl)
   g <- g + geom_line(aes(x = 1 - Prob, y = L, group = Level), data = plODE) +
      geom_line(aes(x = 1 - Prob, y = U, group = Level), data = plODE)
   g
}
}
\references{
Yves Deville (2024)
"Profile Likelihood via Optimisation and Differential Equations" arXiv
\doi{10.48550/arXiv.2404.02774}.
library(NSGEV)
}
