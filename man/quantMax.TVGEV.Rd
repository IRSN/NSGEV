% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantMax.R
\name{quantMax.TVGEV}
\alias{quantMax.TVGEV}
\title{Quantiles of the Maximum on a Period of Time}
\usage{
\method{quantMax}{TVGEV}(
  object,
  prob,
  date = NULL,
  level = 0.95,
  psi = NULL,
  confintMethod = "delta",
  deriv = FALSE,
  out = c("data.frame", "array"),
  trace = 1L
)
}
\arguments{
\item{object}{A \code{TVGEV} model object.}

\item{prob}{A numeric vector giving the (non-exceedance)
probabilities at which the quantiles will be computed.}

\item{date}{A vector that can be coerced to the class
\code{"Date"} giving the beginnings of the blocks for a period
of interest.}

\item{level}{The confidence level.}

\item{confintMethod}{Character indicating the method to be used
for the confidence intervals on the quantiles.}

\item{out}{Character indicating what type of object will be
returned. When \code{out} is \code{"data.frame"} the output
actually has the (S3) class \code{"quantMax.TVGEV"} inheriting
from \code{"data.frame"}. A few methods exist for this class.}

\item{trace}{Integer level of verbosity.}
}
\value{
An object with its class depending on the value of
   \code{out}.

   \itemize{
        \item {\code{out = "data.frame" }}{
            An object inheriting
            from the \code{"data.frame"} class which can be used
            in methods such as \code{autoplot}.
        }
        \item {\code{out = "array" }}{
            A 3-dimensional array with dimensions, \emph{probability},
            \emph{type of result} (Quantile, Lower or Upper confidence
            limit) and \emph{confidence level}.
        }
  }
}
\description{
Compute the quantiles for the random maximum on a given period or
collection of blocks of interest.
}
\details{
Let \eqn{M^\star := \max_{b} Y_b}{M = max_b Y_b} be the maximum over
the blocks \eqn{b} of interest. Since the blocks are
assumed to be independent the distribution function of \eqn{M^\star}
is
\deqn{
   F_{M^\star}(m^\star) = \prod_{b} F_{\texttt{GEV}}(m^\star; \,
   \boldsymbol{\theta}_b)
}{F_M(m) = prod_b F_GEV(m; \theta_b)}
and this distribution function depnds on the vector
\eqn{\boldsymbol{\psi}}{\psi} of the model parameters via
\eqn{\boldsymbol{\theta}_b(\boldsymbol{\psi})}{\theta_b(\psi)}.
For a given probability \eqn{p}, the corresponding quantile
\eqn{q_{M^\star}(p;\,\boldsymbol{\psi})}{q_M(p; \psi)} is the
solution \eqn{m^\star}{m} of
\eqn{F^\star(m^\star;\,\boldsymbol{\psi}) = p}{F_M(m; \psi) = p}.
The derivative of the quantile w.r.t. \eqn{\boldsymbol{\psi}}{\psi}
can be obtained by the implicit function theorem and then be used for
the inference e.g., using the "delta method".
}
\examples{
example(TVGEV)
qM1 <- quantMax(res2, level = c(0.95, 0.70))
qM2 <- quantMax(res2,
                date = as.Date(sprintf("\%4d-01-01", 2025:2055)),
                level = c(0.95, 0.70))
}
