% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictNSGEV.R
\name{predict.NSGEV}
\alias{predict.NSGEV}
\title{Prediction of Return Levels for a \code{NSGEV} object}
\usage{
\method{predict}{NSGEV}(object, period = NULL, newdata = NULL,
  resample = FALSE, RLType = c("exceed", "average"), confInt = c("delta",
  "none", "proflik"), confLevel = 0.95, trace = 0, ...)
}
\arguments{
\item{object}{A \code{NSGEV} model.}

\item{period}{A numeric vector giving the periods at which the
Return Levels will be computed.}

\item{newdata}{A data frame containing the covariates needed. Each
row represents a block with unit duration.}

\item{resample}{Not used yet. See the \code{\link{RL}}
function. For now, the RL period that are greater than
\code{nrow(newdata)} are discarded in the computation.}

\item{RLType}{The type of Return Level as in \code{\link{RL}}.}

\item{confInt}{The type of Confidence Interval (CI) to compute.
The value \code{"delta"} leads to using the \emph{delta method},
and \code{"proflik"} leads to using the profile-likelihood method.}

\item{confLevel}{The Confidence Levels at which the CI will be
computed.  For \code{"proflik"} CI, only one level can be given
for now.}

\item{trace}{Level of verbosity.}

\item{...}{Not used yet.}
}
\value{
A list with several elements.

\item{RL}{A data frame with the predicted RLs and the related CIs,
with one row by block.}

\item{PsiStar}{When \code{confInt} is equal to \code{"proflik"},
this element is a matrix with its row \eqn{i} giving the value
\eqn{\boldsymbol{psi}^\star}{\psi*} of the vector of parameters
that maximizes the Return Level \eqn{\rho(T)} with period \eqn{T =
T_i} under the constraint on the log-likelihood. Since most often
the rows are close enough, a significant reduction of the
computing time could be achieved in the near future by using the
same value of \eqn{\boldsymbol{\psi}}{\psi} for all the Return
Periods.  }
}
\description{
Prediction of Return Levels for a \code{NSGEV} object
}
\note{
For the profile-likelihood method, the determination of the
confidence intervals is quite slow because a constrained
optimization problem is solved for each period.

Future versions might allow different durations across blocks by
using dedicated arguments. For now it must be kept in mind that
the periods are understood as multiple of a constant block
duration. So if \code{newdata} has \code{100} rows the maximal
Return Period that can be used without resampling is \code{100}.
}
\examples{
example(as.NSGEV.fevd)
L.delta <- predict(ns, period = seq(from = 10,  to = 68, by = 10),
             RLType = "exceed")
plot(U_95 ~ period, data = L.delta$RL, ylim = c(20, 27), type = "l")
lines(quant ~ period, data = L.delta$RL)

## much slower, but much trustier!
\dontrun{
L.proflik <- predict(ns, period = seq(from = 10,  to = 68, by = 10),
             RLType = "exceed", confInt = "proflik") 
plot(U_95 ~ period, data = L.proflik$RL, ylim = c(20, 30), type = "l")
lines(quant ~ period, data = L.proflik$RL)
}
}
\author{
Yves Deville
}
