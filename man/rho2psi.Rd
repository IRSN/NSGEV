% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NSGEV.R
\name{rho2psi}
\alias{rho2psi}
\title{Find the complete vector of NSGEV parameters from a partial
vector and a Return Level}
\usage{
rho2psi(rho, nm1, psi_m1, model, data = NULL, type = "expect")
}
\arguments{
\item{rho}{A fixed Return Level (RL).}

\item{nm1}{Name of the parameter which is adjusted.}

\item{psi_m1}{Vector of NSGEV parameters with its element
\code{nm1} removed.}

\item{model}{The \code{NSGEV} model.}

\item{data}{Data frame of covariates.}

\item{type}{The type of Return Level.}
}
\value{
A vector \eqn{\boldsymbol{\psi}}{\psi} of NSGEV parameters.
}
\description{
Find the complete vector of NSGEV parameters from a partial vector
and a Return Level.
}
\details{
In a Non-Sationary framework, a Return Level (RL) \code{rho}
relates to a given value of the covariates or to a distribution of
the covariates. This distribution is assumed here to be given by
the observations in \code{data}, assuming that the corresponding
Return Period is equal to the number of observations understood as
a multiple of the block duration. When \code{type = "expect"} the
RL is the value \eqn{\rho} for which the random number of
exceedances over \eqn{\rho} has unit expectation.

This function is a technical function to profile the likelihood.
One of the NSGEV model parameter, say \eqn{\psi_1}, is adjusted to
reach the given value RL, the other elements of \eqn{\psi} being
given and fixed. These later elements form a vector
\eqn{\boldsymbol{\psi}_{-1}}{\psi_{-1}} with length \eqn{p-1},
where \eqn{p} is the number of model parameters. Now for a given
value of \eqn{rho}, the value of the profile log-likelihood
\eqn{\ell(\rho)}{l(\rho)} is obtained by maximising the
log-likelihood w.r.t \eqn{\boldsymbol{\psi}_{-1}}{\psi_{-1}}.
}
\examples{
df <- data.frame(t = 1:10)
fit <- NSGEV(formulas = list("loc" = ~ alpha + beta * t,  "scale" = ~ delta, "shape" = ~ xi),
                             data = df)
df.new <- data.frame(t = 11:20)
psi <- c("alpha" = 1, "beta" = 0.01, "delta" = 0.6, "xi" = 0.06)
rho2psi(rho = 30, nm1 = "alpha", psi_m1 = psi[-1], model = fit, data = df.new)
rho2psi(rho = 40, nm1 = "alpha", psi_m1 = psi[-1], model = fit, data = df.new)
}
\author{
Yves Deville
}
